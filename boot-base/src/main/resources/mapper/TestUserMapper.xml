<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ogr.spring.dao.TestUserDao">

    <resultMap type="ogr.spring.pojo.po.TestUser" id="TestUserMap">
        <result property="testUserK" column="test_user_k" jdbcType="INTEGER"/>
        <result property="testUsername" column="test_username" jdbcType="VARCHAR"/>
        <result property="testPassword" column="test_password" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TestUserMap">
        select
          test_user_k, test_username, test_password
        from db0.test_user
        where test_user_k = #{testUserK}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TestUserMap">
        select
          test_user_k, test_username, test_password
        from db0.test_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TestUserMap">
        select
          test_user_k, test_username, test_password
        from db0.test_user
        <where>
            <if test="testUserK != null">
                and test_user_k = #{testUserK}
            </if>
            <if test="testUsername != null and testUsername != ''">
                and test_username = #{testUsername}
            </if>
            <if test="testPassword != null and testPassword != ''">
                and test_password = #{testPassword}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="testUserK" useGeneratedKeys="true">
        insert into db0.test_user(test_username, test_password)
        values (#{testUsername}, #{testPassword})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update db0.test_user
        <set>
            <if test="testUsername != null and testUsername != ''">
                test_username = #{testUsername},
            </if>
            <if test="testPassword != null and testPassword != ''">
                test_password = #{testPassword},
            </if>
        </set>
        where test_user_k = #{testUserK}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from db0.test_user where test_user_k = #{testUserK}
    </delete>

    <!-- 嵌套查询 -->
    <resultMap type="ogr.spring.pojo.po.TestUser" id="TestUserMapAs">
        <result property="testUserK" column="test_user_k" jdbcType="INTEGER"/>
        <result property="testUsername" column="test_username" jdbcType="VARCHAR"/>
        <result property="testPassword" column="test_password" jdbcType="VARCHAR"/>
        <collection property="racesUnitsPOList" column="test_user_k"
            jdbcType="BIGINT" select="ogr.spring.dao.RacesUnitsDao.queryAllByRace"/> <!--ofType="ogr.spring.pojo.po.RacesUnitsPO"-->
    </resultMap>
    <select id="queryAssociationById" resultMap="TestUserMapAs">
        select test_user_k, test_username, test_password
        from test_user where test_user_k = #{testUserK}
    </select>

    <!-- 嵌套结果 -->
    <resultMap type="ogr.spring.pojo.po.TestUser" id="queryResultEmbedByIdMap">
        <result property="testUserK" column="test_user_k" jdbcType="INTEGER"/>
        <result property="testUsername" column="test_username" jdbcType="VARCHAR"/>
        <result property="testPassword" column="test_password" jdbcType="VARCHAR"/>
        <collection  property="racesUnitsPOList" resultMap="ogr.spring.dao.RacesUnitsDao.RacesUnitsMap"/> <!--ofType="ogr.spring.pojo.po.RacesUnitsPO"-->
    </resultMap>
    <select id="queryResultEmbedById" resultMap="queryResultEmbedByIdMap">
        select mt.test_user_k, mt.test_username, mt.test_password,
               st.id, st.race, st.soldier_kind, st.combat_style, st.hp, st.mp, st.update_timestamp, st.update_time
        from test_user mt left outer join races_units st on test_user_k = race
        where mt.test_user_k = #{testUserK}
    </select>



</mapper>